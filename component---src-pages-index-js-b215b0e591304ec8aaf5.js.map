{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/button/button.js","webpack:///./src/components/button/index.js","webpack:///./src/components/archive-pagination/archive-pagination.js","webpack:///./src/components/archive-pagination/index.js"],"names":["query","IndexPage","data","title","description","Config","siteDescription","path","posts","allMarkdownRemark","edges","nextPage","Button","children","to","buttonStyle","className","style","button","defaultProps","ArchivePagination","prevPage","container","Utils","resolvePageUrl","pages","archive","buttonLeft","buttonRight"],"mappings":"0FAAA,qHA2BaA,EAAK,aA2BHC,UA3CG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,OAAOC,YAAaC,IAAOC,gBAAiBC,KAAK,KAC5D,kBAAC,IAAD,CAAUC,MAAON,EAAKO,kBAAkBC,QACxC,kBAAC,IAAD,CAAmBC,SAAU,O,+ECR3BC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,GAAIC,EAAjB,EAAiBA,YAAjB,OACb,kBAAC,OAAD,CAAMD,GAAIA,EAAIE,UAAcC,IAAMC,OAAX,IAAqBH,GACzCF,IAULD,EAAOO,aAAe,CACpBJ,YAAa,IAGAH,QCvBf,mC,yHCsCeQ,EA5BW,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUV,EAAb,EAAaA,SAAb,OACxB,yBAAKK,UAAWC,IAAMK,WACnBD,EACC,kBAAC,IAAD,CACEP,GAAIS,IAAMC,eAAenB,IAAOoB,MAAMC,QAASL,GAC/CN,YAAaE,IAAMU,YAEnB,kBAAC,IAAD,MACA,8CAEA,KACHhB,EACC,kBAAC,IAAD,CACEG,GAAIS,IAAMC,eAAenB,IAAOoB,MAAMC,QAASf,GAC/CI,YAAaE,IAAMW,aAEnB,6CACA,kBAAC,IAAD,OAEA,OC7BR","file":"component---src-pages-index-js-b215b0e591304ec8aaf5.js","sourcesContent":["/* Vendor imports */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n/* App imports */\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport PostList from '../components/post-list'\nimport ArchivePagination from '../components/archive-pagination'\nimport Config from '../../config'\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    <SEO title=\"Home\" description={Config.siteDescription} path=\"\" />\n    <PostList posts={data.allMarkdownRemark.edges} />\n    <ArchivePagination nextPage={2} />\n  </Layout>\n)\n\nIndexPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n    }).isRequired,\n  }).isRequired,\n}\n\nexport const query = graphql`\n  {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fileAbsolutePath: { regex: \"/index.md$/\" } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            path\n            title\n            tags\n            excerpt\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 600) {\n                  ...GatsbyImageSharpFluid_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n","/* Vendor imports */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n/* App imports */\nimport style from './button.module.less'\n\nconst Button = ({ children, to, buttonStyle }) => (\n  <Link to={to} className={`${style.button} ${buttonStyle}`}>\n    {children}\n  </Link>\n)\n\nButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  to: PropTypes.string.isRequired,\n  buttonStyle: PropTypes.string,\n}\n\nButton.defaultProps = {\n  buttonStyle: '',\n}\n\nexport default Button\n","export { default } from './button.js'\n","/* Vendor imports */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa'\n/* App imports */\nimport Button from '../../components/button'\nimport Config from '../../../config'\nimport Utils from '../../utils'\nimport style from './archive-pagination.module.less'\n\nconst ArchivePagination = ({ prevPage, nextPage }) => (\n  <div className={style.container}>\n    {prevPage ? (\n      <Button\n        to={Utils.resolvePageUrl(Config.pages.archive, prevPage)}\n        buttonStyle={style.buttonLeft}\n      >\n        <FaArrowLeft />\n        <span>Newer posts</span>\n      </Button>\n    ) : null}\n    {nextPage ? (\n      <Button\n        to={Utils.resolvePageUrl(Config.pages.archive, nextPage)}\n        buttonStyle={style.buttonRight}\n      >\n        <span>Older posts</span>\n        <FaArrowRight />\n      </Button>\n    ) : null}\n  </div>\n)\n\nArchivePagination.propTypes = {\n  prevPage: PropTypes.number,\n  nextPage: PropTypes.number,\n}\n\nexport default ArchivePagination\n","export { default } from './archive-pagination.js'\n"],"sourceRoot":""}