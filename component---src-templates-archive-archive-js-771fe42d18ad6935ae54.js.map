{"version":3,"sources":["webpack:///./src/templates/archive/archive.js","webpack:///./src/components/button/button.js","webpack:///./src/components/button/index.js","webpack:///./src/components/archive-pagination/archive-pagination.js","webpack:///./src/components/archive-pagination/index.js"],"names":["query","Archive","data","pageContext","archivePage","prevPage","nextPage","lastArchivePage","title","description","path","Config","pages","archive","posts","allMarkdownRemark","edges","Button","children","to","buttonStyle","className","style","button","defaultProps","ArchivePagination","container","Utils","resolvePageUrl","buttonLeft","buttonRight"],"mappings":"0FAAA,qHAyCaA,EAAK,aA+BHC,UA7DC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACfC,EAAiCD,EAAjCC,YACFC,EAAWD,EAAc,EAAIA,EAAc,EAAI,KAC/CE,EAAWF,EAFwBD,EAApBI,gBAE4BH,EAAc,EAAI,KAEnE,OACE,kBAAC,IAAD,CAAQI,MAAM,WACZ,kBAAC,IAAD,CACEA,MAAK,kBAAoBJ,EACzBK,YAAY,YACZC,KAAMC,IAAOC,MAAMC,UAErB,kBAAC,IAAD,CAAUC,MAAOZ,EAAKa,kBAAkBC,QACxC,kBAAC,IAAD,CAAmBX,SAAUA,EAAUC,SAAUA,O,+ECjBjDW,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,GAAIC,EAAjB,EAAiBA,YAAjB,OACb,kBAAC,OAAD,CAAMD,GAAIA,EAAIE,UAAcC,IAAMC,OAAX,IAAqBH,GACzCF,IAULD,EAAOO,aAAe,CACpBJ,YAAa,IAGAH,QCvBf,mC,yHCsCeQ,EA5BW,SAAC,GAAD,IAAGpB,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAb,OACxB,yBAAKe,UAAWC,IAAMI,WACnBrB,EACC,kBAAC,IAAD,CACEc,GAAIQ,IAAMC,eAAejB,IAAOC,MAAMC,QAASR,GAC/Ce,YAAaE,IAAMO,YAEnB,kBAAC,IAAD,MACA,8CAEA,KACHvB,EACC,kBAAC,IAAD,CACEa,GAAIQ,IAAMC,eAAejB,IAAOC,MAAMC,QAASP,GAC/Cc,YAAaE,IAAMQ,aAEnB,6CACA,kBAAC,IAAD,OAEA,OC7BR","file":"component---src-templates-archive-archive-js-771fe42d18ad6935ae54.js","sourcesContent":["/* Vendor imports */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n/* App imports */\nimport Layout from '../../components/layout'\nimport SEO from '../../components/seo'\nimport PostList from '../../components/post-list'\nimport ArchivePagination from '../../components/archive-pagination'\nimport Config from '../../../config'\n\nconst Archive = ({ data, pageContext }) => {\n  const { archivePage, lastArchivePage } = pageContext\n  const prevPage = archivePage > 1 ? archivePage - 1 : null\n  const nextPage = archivePage < lastArchivePage ? archivePage + 1 : null\n\n  return (\n    <Layout title=\"Archive\">\n      <SEO\n        title={`Archive | Page ${archivePage}`}\n        description=\"Old posts\"\n        path={Config.pages.archive}\n      />\n      <PostList posts={data.allMarkdownRemark.edges} />\n      <ArchivePagination prevPage={prevPage} nextPage={nextPage} />\n    </Layout>\n  )\n}\n\nArchive.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n    }).isRequired,\n  }).isRequired,\n  pageContext: PropTypes.shape({\n    archivePage: PropTypes.number.isRequired,\n    lastArchivePage: PropTypes.number.isRequired,\n  }).isRequired,\n}\n\nexport const query = graphql`\n  query($postPaths: [String!]) {\n    allMarkdownRemark(\n      filter: {\n        frontmatter: { path: { in: $postPaths } }\n        fileAbsolutePath: { regex: \"/index.md$/\" }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            path\n            title\n            tags\n            date(formatString: \"MMMM DD, YYYY\")\n            excerpt\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 600) {\n                  ...GatsbyImageSharpFluid_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Archive\n","/* Vendor imports */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n/* App imports */\nimport style from './button.module.less'\n\nconst Button = ({ children, to, buttonStyle }) => (\n  <Link to={to} className={`${style.button} ${buttonStyle}`}>\n    {children}\n  </Link>\n)\n\nButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  to: PropTypes.string.isRequired,\n  buttonStyle: PropTypes.string,\n}\n\nButton.defaultProps = {\n  buttonStyle: '',\n}\n\nexport default Button\n","export { default } from './button.js'\n","/* Vendor imports */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa'\n/* App imports */\nimport Button from '../../components/button'\nimport Config from '../../../config'\nimport Utils from '../../utils'\nimport style from './archive-pagination.module.less'\n\nconst ArchivePagination = ({ prevPage, nextPage }) => (\n  <div className={style.container}>\n    {prevPage ? (\n      <Button\n        to={Utils.resolvePageUrl(Config.pages.archive, prevPage)}\n        buttonStyle={style.buttonLeft}\n      >\n        <FaArrowLeft />\n        <span>Newer posts</span>\n      </Button>\n    ) : null}\n    {nextPage ? (\n      <Button\n        to={Utils.resolvePageUrl(Config.pages.archive, nextPage)}\n        buttonStyle={style.buttonRight}\n      >\n        <span>Older posts</span>\n        <FaArrowRight />\n      </Button>\n    ) : null}\n  </div>\n)\n\nArchivePagination.propTypes = {\n  prevPage: PropTypes.number,\n  nextPage: PropTypes.number,\n}\n\nexport default ArchivePagination\n","export { default } from './archive-pagination.js'\n"],"sourceRoot":""}